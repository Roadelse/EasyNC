Module EasyNC
    ! ................................................. use modules
    use nc4fortran, only: netcdf_file
    use rdee_fortran

    ! ................................................. module variables
    integer :: enc_i, enc_j, enc_k
    interface easyO
        !#jj2 for nd in [0, 1,2,3,4,5,6,7]:
        module procedure easyO_{{ nd }}d
        !#jj2 endfor
    end interface

    ! interface easyI
    ! end interface

contains
    !#jj2 for nd in [0, 1,2,3,4,5,6,7]:
    Subroutine easyO_{{ nd }}d(filename, varname, data)
        implicit none
        ! ................................................. Arguments
        character(*), intent(in) :: filename, varname
        class(*), intent(in) :: data{{ get_rank_from_nd(nd) }}
        ! ................................................. local variable
        type(netcdf_file) :: ncf
        logical :: istatus, isExist
        ! ................................................. main body
        ! =================== open netcdf file
        call ncf%open(filename, 'a')

        select type(data)
            type is (integer(kind=4))
                call ncf%write(varname, data)
            type is (integer(kind=8))
                call ncf%write(varname, data)
            type is (real(kind=4))
                call ncf%write(varname, data)
            type is (real(kind=8))
                call ncf%write(varname, data)
            type is (character(*))
                call ncf%write(varname, data)
            type is (logical)
                print *, 'to be done'
                continue
            type is (complex)
                print *, 'to be done'
                continue
            class default
                stop 'Error in EasyNC/easyO_{{ nd }}d, unknown data type for data'
        end select

        call ncf%close()
    End Subroutine
    !#jj2 endfor
End Module